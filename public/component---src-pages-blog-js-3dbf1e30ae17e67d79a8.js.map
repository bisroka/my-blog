{"version":3,"sources":["webpack:///./src/Components/News.js","webpack:///./src/sections/footerSection.js","webpack:///./src/blog/articles.js","webpack:///./src/pages/blog.js"],"names":["News","postTitle","button","thumbnail","link","to","newsCard","src","url","lightColor","white","FooterStyled","styled","footer","props","theme","colors","primary","fontSize","s","gray","device","tablet","m","FooterSection","footerContent","StyledArticlesPage","main","Articles","data","button1","news","allDatoCmsArticle","edges","map","article","key","node","title","postDescription","content","slug","articles","column","pageContent","query","BlogPage","Navigation","buttons","navButtons","showPostButton"],"mappings":"6FAAA,6DAkBeA,IAXF,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,KAC5C,OACE,kBAAC,IAAD,KACU,kBAAC,OAAD,CAAMC,GAAID,GAAV,IAAiB,kBAAC,IAAD,CAAaE,UAAQ,EAACC,IAAKJ,EAAYA,EAAUK,IAAM,OAAxE,OACA,kBAAC,OAAD,CAAMH,GAAID,GAAV,IAAiB,kBAAC,IAAD,CAAiBK,YAAU,GAAGR,GAA/C,KAEA,kBAAC,IAAD,CAAQG,KAAMA,EAAMF,OAAQA,EAAQQ,OAAK,O,oKCTjDC,EAAeC,IAAOC,OAAV,kFAAGD,CAAH,0IAII,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,WAEjC,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,SAASC,KAElC,SAAAL,GAAK,OAAIA,EAAMC,MAAMC,OAAOI,OAC5BC,IAAOC,QACD,SAAAR,GAAK,OAAIA,EAAMC,MAAMG,SAASK,KAalCC,EARO,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACvB,OACE,kBAACd,EAAD,KACE,2BAAIc,K,wBCfJC,EAAqBd,IAAOe,KAAV,+EAAGf,CAAH,uBAiCTgB,EA7BE,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAElBC,EADWF,EAAKG,kBAAkBC,MAClBC,KAAI,SAAAC,GAAO,OAC/B,kBAACnC,EAAA,EAAD,CACEoC,IAAKD,EAAQE,KAAKC,MAClBpC,OAAQ4B,EACR7B,UAAWkC,EAAQE,KAAKC,MACxBC,gBAAiBJ,EAAQE,KAAKG,QAC9BrC,UAAWgC,EAAQE,KAAKlC,UACxBC,KAAM+B,EAAQE,KAAKI,UAGvB,OACE,oCACE,kBAAC,IAAD,CAAeC,UAAQ,GACzB,kBAAChB,EAAD,KACI,kBAAC,IAAD,CAAeiB,QAAM,GACnB,kBAAC,IAAD,0BACA,kBAAC,IAAD,KACGZ,KAIH,kBAAC,EAAD,CAAeN,cAAemB,IAAY/B,OAAOY,mBCd9CoB,EAAK,YAiBHC,UA7BE,SAAC,GAAc,IAAZjB,EAAW,EAAXA,KAClB,OACE,oCACE,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAed,MAAOA,KACpB,kBAACgC,EAAA,EAAD,CAAYC,QAASJ,IAAYI,QAAQC,aACzC,kBAAC,EAAD,CAAUnB,QAASc,IAAYI,QAAQE,eAAgBrB,KAAMA","file":"component---src-pages-blog-js-3dbf1e30ae17e67d79a8.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Button from \"../Components/Button\"\nimport PropTypes from \"prop-types\"\n\nimport { StyledNewsCard, StyledSubheader, StyledImage } from \"./styled-components/index.styledComponents\"\n\nconst News = ({ postTitle, button, thumbnail, link }) => {\n  return (\n    <StyledNewsCard>\n              <Link to={link}> <StyledImage newsCard src={thumbnail ? thumbnail.url : null}></StyledImage>   </Link>\n              <Link to={link}> <StyledSubheader lightColor >{postTitle}</StyledSubheader> </Link>\n              {/* <StyledParagraph paragraph={postDescription} section=\"news\" /> */}\n              <Button link={link} button={button} white />\n      </StyledNewsCard>\n  )\n}\n\nexport default News\n\n\nNews.propTypes = {\n  postTitle: PropTypes.string,\n  button: PropTypes.string,\n  thumbnail: PropTypes.shape({\n    url: PropTypes.url\n  }),\n  link: PropTypes.string \n}; ","import React from \"react\"\nimport styled from \"styled-components\"\nimport { device } from \"../utils/device\"\n\nconst FooterStyled = styled.footer`\n  height: 5vh;\n  width: 100vw;\n  overflow: hidden;\n  background-color: ${props => props.theme.colors.primary};\n  p {\n    font-size: ${props => props.theme.fontSize.s};\n    text-align: center;\n    color: ${props => props.theme.colors.gray};;\n    @media ${device.tablet} {\n      font-size: ${props => props.theme.fontSize.m};\n    }\n  }\n`\n\nconst FooterSection = ({ footerContent }) => {\n  return (\n    <FooterStyled>\n      <p>{footerContent}</p>\n    </FooterStyled>\n  )\n}\n\nexport default FooterSection\n","import React from \"react\"\nimport News from \"../Components/News\"\nimport styled from 'styled-components'\nimport FooterSection from \"../sections/footerSection\"\nimport {pageContent} from \"../utils/pageContent\"\nimport { StyledHeader, StyledSection, StyledWrapper, } from \"../Components/styled-components/index.styledComponents\"\n\nconst StyledArticlesPage = styled.main`\n  min-height:100vh;\n`\n\nconst Articles = ({ data, button1 }) => {\n  const articles = data.allDatoCmsArticle.edges\n  const news = articles.map(article => (\n    <News\n      key={article.node.title}\n      button={button1}\n      postTitle={article.node.title}\n      postDescription={article.node.content}\n      thumbnail={article.node.thumbnail}\n      link={article.node.slug}\n    />\n  ))\n  return (\n    <>\n      <StyledSection articles>\n    <StyledArticlesPage>\n        <StyledWrapper column>\n          <StyledHeader>Co u mnie słychać</StyledHeader>\n          <StyledWrapper>\n            {news}\n          </StyledWrapper>\n          </StyledWrapper>\n    </StyledArticlesPage>\n          <FooterSection footerContent={pageContent.footer.footerContent} />\n      </StyledSection>\n    </>\n  )\n}\n\nexport default Articles\n\n// export const query = graphql`\n//   query fetchArticle($slug: String) {\n//     article: datoCmsArticle(slug: { eq: $slug }) {\n//       title\n//       slug\n//       content\n//       thumbnail {\n//         url\n//       }\n//     }\n//   }\n// `\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { GlobalStyle, theme } from \"../utils/theme\"\nimport { ThemeProvider } from \"styled-components\"\nimport Navigation from \"../sections/Navigation\"\nimport Articles from \"../blog/articles\"\nimport { pageContent } from \"../utils/pageContent\"\n\nconst BlogPage = ({ data }) => {\n  return (\n    <>\n      <GlobalStyle />\n      <ThemeProvider theme={theme}>\n        <Navigation buttons={pageContent.buttons.navButtons} />\n        <Articles button1={pageContent.buttons.showPostButton} data={data} />\n      </ThemeProvider>\n    </>\n  )\n}\n\nexport const query = graphql`\n  query MyQuery {\n    allDatoCmsArticle {\n      edges {\n        node {\n          title\n          slug\n          content\n          thumbnail {\n            url\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default BlogPage\n"],"sourceRoot":""}